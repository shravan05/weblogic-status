---
# Ansible script to do clean restart weblogic on target servers.
#Usage: ansible-playbook -i inventory Liferayweblogicstatus.yml -l <envType>
#Usage: ansible-playbook -i inventory Liferayweblogucstatus.yml -l DEV
##power devops- 

- hosts: Liferay
  remote_user: '{{ mi_user }}'

  vars_files:
    - ./vars/passwd.yml

  tasks:

  - name: create output file
    file: path={{workspace}}/results.txt state=touch
    register: fileCreate
    delegate_to: localhost


  - name:  Stopping Managed Servers on node1
    shell: cd {{domainDir}}/bin && sh stopManagedWebLogic.sh {{ item }}
    with_items: 
      - managed1
      - managed2
    become: yes
    become_user: oracle
    become_method: sudo
    ignore_errors: yes
    when: inventory in groups['Node1']

  - name: Cleaning tmp & cache directories for Managed Server managed1
    file: 
      path: '{{domainDir}}/servers/managed1/{{ item }}'
      state: absent
    with_items:
      - tmp
      - cache
    become: yes
    become_user: oracle
    become_method: sudo

  - name: Starting Managed Server - managed1
    shell: cd {{domainDir}}/bin; nohup sh startManagedWebLogic.sh managed1 > managed1.log &
    become: yes
    become_user: oracle
    become_method: sudo

  - name: Wait until managed server managed1 comes to RUNNING Mode
    wait_for:
      path: '{{domainDir}}/bin/managed1.log'
      search_regex: RUNNING
    become: yes
    become_user: oracle
    become_method: sudo

  - name: Executing wlst script for Weblogic status
    shell: cd {{wlsDir}}/bin && sh serverstatus.sh {{weblogicUser}} {{weblogicPass}}
    become: yes
    become_user: oracle
    become_method: sudo
    register: resCmd

  - name: print weblogic status to results file
    shell: echo "Created file info with Timestamp - {{resCmd.stdout}}" >> {{workspace}}/results.txt
    when: not(resCmd|skipped)
    delegate_to: localhost
